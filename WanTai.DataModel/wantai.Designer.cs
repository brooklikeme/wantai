//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_DWPlatePosition_Plates", "Plate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WanTai.DataModel.Plate), "DWPlatePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.DWPlatePosition), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_TubesBatch_ExperimentsInfo", "ExperimentsInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WanTai.DataModel.ExperimentsInfo), "TubesBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.TubesBatch), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_RotationOperate_OperationConfiguration", "OperationConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WanTai.DataModel.OperationConfiguration), "RotationOperate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.RotationOperate), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_PCRPlatePosition_Plates", "Plate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WanTai.DataModel.Plate), "PCRPlatePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.PCRPlatePosition), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_TubeGroup_PoolingRulesConfiguration", "PoolingRulesConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WanTai.DataModel.PoolingRulesConfiguration), "TubeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.TubeGroup), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSuppliesConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WanTai.DataModel.ReagentAndSuppliesConfiguration), "ReagentAndSupply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.ReagentAndSupply), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentAndSupply", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WanTai.DataModel.ReagentAndSupply), "ReagentsAndSuppliesConsumption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.ReagentsAndSuppliesConsumption), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_RotationInfo_TubesBatch", "TubesBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WanTai.DataModel.TubesBatch), "RotationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.RotationInfo), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_TubeGroup_TubesBatch", "TubesBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WanTai.DataModel.TubesBatch), "TubeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.TubeGroup), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "FK_Tubes_TubeGroup", "TubeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WanTai.DataModel.TubeGroup), "Tube", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.Tube), true)]
[assembly: EdmRelationshipAttribute("WanTaiModel", "PCRPlatePosition_DWPlatePosition", "DWPlatePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.DWPlatePosition), "PCRPlatePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.PCRPlatePosition))]
[assembly: EdmRelationshipAttribute("WanTaiModel", "TestItem_TubeGroup", "TestingItemConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.TestingItemConfiguration), "TubeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.TubeGroup))]
[assembly: EdmRelationshipAttribute("WanTaiModel", "Tube_PlatePosition", "DWPlatePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.DWPlatePosition), "Tube", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WanTai.DataModel.Tube))]

#endregion

namespace WanTai.DataModel
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WanTaiEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WanTaiEntities”部分中的连接字符串初始化新 WanTaiEntities 对象。
        /// </summary>
        public WanTaiEntities() : base("name=WanTaiEntities", "WanTaiEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WanTaiEntities 对象。
        /// </summary>
        public WanTaiEntities(string connectionString) : base(connectionString, "WanTaiEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WanTaiEntities 对象。
        /// </summary>
        public WanTaiEntities(EntityConnection connection) : base(connection, "WanTaiEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Carrier> Carriers
        {
            get
            {
                if ((_Carriers == null))
                {
                    _Carriers = base.CreateObjectSet<Carrier>("Carriers");
                }
                return _Carriers;
            }
        }
        private ObjectSet<Carrier> _Carriers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DWPlatePosition> DWPlatePositions
        {
            get
            {
                if ((_DWPlatePositions == null))
                {
                    _DWPlatePositions = base.CreateObjectSet<DWPlatePosition>("DWPlatePositions");
                }
                return _DWPlatePositions;
            }
        }
        private ObjectSet<DWPlatePosition> _DWPlatePositions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ExperimentsInfo> ExperimentsInfoes
        {
            get
            {
                if ((_ExperimentsInfoes == null))
                {
                    _ExperimentsInfoes = base.CreateObjectSet<ExperimentsInfo>("ExperimentsInfoes");
                }
                return _ExperimentsInfoes;
            }
        }
        private ObjectSet<ExperimentsInfo> _ExperimentsInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<LogInfo> LogInfoes
        {
            get
            {
                if ((_LogInfoes == null))
                {
                    _LogInfoes = base.CreateObjectSet<LogInfo>("LogInfoes");
                }
                return _LogInfoes;
            }
        }
        private ObjectSet<LogInfo> _LogInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OperationConfiguration> OperationConfigurations
        {
            get
            {
                if ((_OperationConfigurations == null))
                {
                    _OperationConfigurations = base.CreateObjectSet<OperationConfiguration>("OperationConfigurations");
                }
                return _OperationConfigurations;
            }
        }
        private ObjectSet<OperationConfiguration> _OperationConfigurations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PCRPlatePosition> PCRPlatePositions
        {
            get
            {
                if ((_PCRPlatePositions == null))
                {
                    _PCRPlatePositions = base.CreateObjectSet<PCRPlatePosition>("PCRPlatePositions");
                }
                return _PCRPlatePositions;
            }
        }
        private ObjectSet<PCRPlatePosition> _PCRPlatePositions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PCRTestResult> PCRTestResults
        {
            get
            {
                if ((_PCRTestResults == null))
                {
                    _PCRTestResults = base.CreateObjectSet<PCRTestResult>("PCRTestResults");
                }
                return _PCRTestResults;
            }
        }
        private ObjectSet<PCRTestResult> _PCRTestResults;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Plate> Plates
        {
            get
            {
                if ((_Plates == null))
                {
                    _Plates = base.CreateObjectSet<Plate>("Plates");
                }
                return _Plates;
            }
        }
        private ObjectSet<Plate> _Plates;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PoolingRulesConfiguration> PoolingRulesConfigurations
        {
            get
            {
                if ((_PoolingRulesConfigurations == null))
                {
                    _PoolingRulesConfigurations = base.CreateObjectSet<PoolingRulesConfiguration>("PoolingRulesConfigurations");
                }
                return _PoolingRulesConfigurations;
            }
        }
        private ObjectSet<PoolingRulesConfiguration> _PoolingRulesConfigurations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReagentAndSupply> ReagentAndSupplies
        {
            get
            {
                if ((_ReagentAndSupplies == null))
                {
                    _ReagentAndSupplies = base.CreateObjectSet<ReagentAndSupply>("ReagentAndSupplies");
                }
                return _ReagentAndSupplies;
            }
        }
        private ObjectSet<ReagentAndSupply> _ReagentAndSupplies;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReagentAndSuppliesConfiguration> ReagentAndSuppliesConfigurations
        {
            get
            {
                if ((_ReagentAndSuppliesConfigurations == null))
                {
                    _ReagentAndSuppliesConfigurations = base.CreateObjectSet<ReagentAndSuppliesConfiguration>("ReagentAndSuppliesConfigurations");
                }
                return _ReagentAndSuppliesConfigurations;
            }
        }
        private ObjectSet<ReagentAndSuppliesConfiguration> _ReagentAndSuppliesConfigurations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReagentsAndSuppliesConsumption> ReagentsAndSuppliesConsumptions
        {
            get
            {
                if ((_ReagentsAndSuppliesConsumptions == null))
                {
                    _ReagentsAndSuppliesConsumptions = base.CreateObjectSet<ReagentsAndSuppliesConsumption>("ReagentsAndSuppliesConsumptions");
                }
                return _ReagentsAndSuppliesConsumptions;
            }
        }
        private ObjectSet<ReagentsAndSuppliesConsumption> _ReagentsAndSuppliesConsumptions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RotationInfo> RotationInfoes
        {
            get
            {
                if ((_RotationInfoes == null))
                {
                    _RotationInfoes = base.CreateObjectSet<RotationInfo>("RotationInfoes");
                }
                return _RotationInfoes;
            }
        }
        private ObjectSet<RotationInfo> _RotationInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RotationOperate> RotationOperates
        {
            get
            {
                if ((_RotationOperates == null))
                {
                    _RotationOperates = base.CreateObjectSet<RotationOperate>("RotationOperates");
                }
                return _RotationOperates;
            }
        }
        private ObjectSet<RotationOperate> _RotationOperates;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SystemFluidConfiguration> SystemFluidConfigurations
        {
            get
            {
                if ((_SystemFluidConfigurations == null))
                {
                    _SystemFluidConfigurations = base.CreateObjectSet<SystemFluidConfiguration>("SystemFluidConfigurations");
                }
                return _SystemFluidConfigurations;
            }
        }
        private ObjectSet<SystemFluidConfiguration> _SystemFluidConfigurations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TestingItemConfiguration> TestingItemConfigurations
        {
            get
            {
                if ((_TestingItemConfigurations == null))
                {
                    _TestingItemConfigurations = base.CreateObjectSet<TestingItemConfiguration>("TestingItemConfigurations");
                }
                return _TestingItemConfigurations;
            }
        }
        private ObjectSet<TestingItemConfiguration> _TestingItemConfigurations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TubeGroup> TubeGroups
        {
            get
            {
                if ((_TubeGroups == null))
                {
                    _TubeGroups = base.CreateObjectSet<TubeGroup>("TubeGroups");
                }
                return _TubeGroups;
            }
        }
        private ObjectSet<TubeGroup> _TubeGroups;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Tube> Tubes
        {
            get
            {
                if ((_Tubes == null))
                {
                    _Tubes = base.CreateObjectSet<Tube>("Tubes");
                }
                return _Tubes;
            }
        }
        private ObjectSet<Tube> _Tubes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TubesBatch> TubesBatches
        {
            get
            {
                if ((_TubesBatches == null))
                {
                    _TubesBatches = base.CreateObjectSet<TubesBatch>("TubesBatches");
                }
                return _TubesBatches;
            }
        }
        private ObjectSet<TubesBatch> _TubesBatches;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserInfo> UserInfoes
        {
            get
            {
                if ((_UserInfoes == null))
                {
                    _UserInfoes = base.CreateObjectSet<UserInfo>("UserInfoes");
                }
                return _UserInfoes;
            }
        }
        private ObjectSet<UserInfo> _UserInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RoleInfo> RoleInfoes
        {
            get
            {
                if ((_RoleInfoes == null))
                {
                    _RoleInfoes = base.CreateObjectSet<RoleInfo>("RoleInfoes");
                }
                return _RoleInfoes;
            }
        }
        private ObjectSet<RoleInfo> _RoleInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SampleTracking> SampleTrackings
        {
            get
            {
                if ((_SampleTrackings == null))
                {
                    _SampleTrackings = base.CreateObjectSet<SampleTracking>("SampleTrackings");
                }
                return _SampleTrackings;
            }
        }
        private ObjectSet<SampleTracking> _SampleTrackings;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SystemConfiguration> SystemConfigurations
        {
            get
            {
                if ((_SystemConfigurations == null))
                {
                    _SystemConfigurations = base.CreateObjectSet<SystemConfiguration>("SystemConfigurations");
                }
                return _SystemConfigurations;
            }
        }
        private ObjectSet<SystemConfiguration> _SystemConfigurations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReportConfiguration> ReportConfigurations
        {
            get
            {
                if ((_ReportConfigurations == null))
                {
                    _ReportConfigurations = base.CreateObjectSet<ReportConfiguration>("ReportConfigurations");
                }
                return _ReportConfigurations;
            }
        }
        private ObjectSet<ReportConfiguration> _ReportConfigurations;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Carriers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCarriers(Carrier carrier)
        {
            base.AddObject("Carriers", carrier);
        }
    
        /// <summary>
        /// 用于向 DWPlatePositions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDWPlatePositions(DWPlatePosition dWPlatePosition)
        {
            base.AddObject("DWPlatePositions", dWPlatePosition);
        }
    
        /// <summary>
        /// 用于向 ExperimentsInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToExperimentsInfoes(ExperimentsInfo experimentsInfo)
        {
            base.AddObject("ExperimentsInfoes", experimentsInfo);
        }
    
        /// <summary>
        /// 用于向 LogInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLogInfoes(LogInfo logInfo)
        {
            base.AddObject("LogInfoes", logInfo);
        }
    
        /// <summary>
        /// 用于向 OperationConfigurations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOperationConfigurations(OperationConfiguration operationConfiguration)
        {
            base.AddObject("OperationConfigurations", operationConfiguration);
        }
    
        /// <summary>
        /// 用于向 PCRPlatePositions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPCRPlatePositions(PCRPlatePosition pCRPlatePosition)
        {
            base.AddObject("PCRPlatePositions", pCRPlatePosition);
        }
    
        /// <summary>
        /// 用于向 PCRTestResults EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPCRTestResults(PCRTestResult pCRTestResult)
        {
            base.AddObject("PCRTestResults", pCRTestResult);
        }
    
        /// <summary>
        /// 用于向 Plates EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPlates(Plate plate)
        {
            base.AddObject("Plates", plate);
        }
    
        /// <summary>
        /// 用于向 PoolingRulesConfigurations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPoolingRulesConfigurations(PoolingRulesConfiguration poolingRulesConfiguration)
        {
            base.AddObject("PoolingRulesConfigurations", poolingRulesConfiguration);
        }
    
        /// <summary>
        /// 用于向 ReagentAndSupplies EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReagentAndSupplies(ReagentAndSupply reagentAndSupply)
        {
            base.AddObject("ReagentAndSupplies", reagentAndSupply);
        }
    
        /// <summary>
        /// 用于向 ReagentAndSuppliesConfigurations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReagentAndSuppliesConfigurations(ReagentAndSuppliesConfiguration reagentAndSuppliesConfiguration)
        {
            base.AddObject("ReagentAndSuppliesConfigurations", reagentAndSuppliesConfiguration);
        }
    
        /// <summary>
        /// 用于向 ReagentsAndSuppliesConsumptions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReagentsAndSuppliesConsumptions(ReagentsAndSuppliesConsumption reagentsAndSuppliesConsumption)
        {
            base.AddObject("ReagentsAndSuppliesConsumptions", reagentsAndSuppliesConsumption);
        }
    
        /// <summary>
        /// 用于向 RotationInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRotationInfoes(RotationInfo rotationInfo)
        {
            base.AddObject("RotationInfoes", rotationInfo);
        }
    
        /// <summary>
        /// 用于向 RotationOperates EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRotationOperates(RotationOperate rotationOperate)
        {
            base.AddObject("RotationOperates", rotationOperate);
        }
    
        /// <summary>
        /// 用于向 SystemFluidConfigurations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSystemFluidConfigurations(SystemFluidConfiguration systemFluidConfiguration)
        {
            base.AddObject("SystemFluidConfigurations", systemFluidConfiguration);
        }
    
        /// <summary>
        /// 用于向 TestingItemConfigurations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTestingItemConfigurations(TestingItemConfiguration testingItemConfiguration)
        {
            base.AddObject("TestingItemConfigurations", testingItemConfiguration);
        }
    
        /// <summary>
        /// 用于向 TubeGroups EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTubeGroups(TubeGroup tubeGroup)
        {
            base.AddObject("TubeGroups", tubeGroup);
        }
    
        /// <summary>
        /// 用于向 Tubes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTubes(Tube tube)
        {
            base.AddObject("Tubes", tube);
        }
    
        /// <summary>
        /// 用于向 TubesBatches EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTubesBatches(TubesBatch tubesBatch)
        {
            base.AddObject("TubesBatches", tubesBatch);
        }
    
        /// <summary>
        /// 用于向 UserInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserInfoes(UserInfo userInfo)
        {
            base.AddObject("UserInfoes", userInfo);
        }
    
        /// <summary>
        /// 用于向 RoleInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoleInfoes(RoleInfo roleInfo)
        {
            base.AddObject("RoleInfoes", roleInfo);
        }
    
        /// <summary>
        /// 用于向 SampleTrackings EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSampleTrackings(SampleTracking sampleTracking)
        {
            base.AddObject("SampleTrackings", sampleTracking);
        }
    
        /// <summary>
        /// 用于向 SystemConfigurations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSystemConfigurations(SystemConfiguration systemConfiguration)
        {
            base.AddObject("SystemConfigurations", systemConfiguration);
        }
    
        /// <summary>
        /// 用于向 ReportConfigurations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReportConfigurations(ReportConfiguration reportConfiguration)
        {
            base.AddObject("ReportConfigurations", reportConfiguration);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="Carrier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrier : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Carrier 对象。
        /// </summary>
        /// <param name="carrierID">CarrierID 属性的初始值。</param>
        /// <param name="carrierName">CarrierName 属性的初始值。</param>
        /// <param name="position">Position 属性的初始值。</param>
        /// <param name="grid">Grid 属性的初始值。</param>
        /// <param name="width">Width 属性的初始值。</param>
        /// <param name="heigh">Heigh 属性的初始值。</param>
        /// <param name="color">Color 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        /// <param name="workDeskType">WorkDeskType 属性的初始值。</param>
        public static Carrier CreateCarrier(global::System.Guid carrierID, global::System.String carrierName, global::System.Double position, global::System.Double grid, global::System.Double width, global::System.Double heigh, global::System.String color, global::System.Int16 type, global::System.String workDeskType)
        {
            Carrier carrier = new Carrier();
            carrier.CarrierID = carrierID;
            carrier.CarrierName = carrierName;
            carrier.Position = position;
            carrier.Grid = grid;
            carrier.Width = width;
            carrier.Heigh = heigh;
            carrier.Color = color;
            carrier.Type = type;
            carrier.WorkDeskType = workDeskType;
            return carrier;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                if (_CarrierID != value)
                {
                    OnCarrierIDChanging(value);
                    ReportPropertyChanging("CarrierID");
                    _CarrierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarrierID");
                    OnCarrierIDChanged();
                }
            }
        }
        private global::System.Guid _CarrierID;
        partial void OnCarrierIDChanging(global::System.Guid value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CarrierName
        {
            get
            {
                return _CarrierName;
            }
            set
            {
                OnCarrierNameChanging(value);
                ReportPropertyChanging("CarrierName");
                _CarrierName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CarrierName");
                OnCarrierNameChanged();
            }
        }
        private global::System.String _CarrierName;
        partial void OnCarrierNameChanging(global::System.String value);
        partial void OnCarrierNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Double _Position;
        partial void OnPositionChanging(global::System.Double value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Grid
        {
            get
            {
                return _Grid;
            }
            set
            {
                OnGridChanging(value);
                ReportPropertyChanging("Grid");
                _Grid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grid");
                OnGridChanged();
            }
        }
        private global::System.Double _Grid;
        partial void OnGridChanging(global::System.Double value);
        partial void OnGridChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Double _Width;
        partial void OnWidthChanging(global::System.Double value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Heigh
        {
            get
            {
                return _Heigh;
            }
            set
            {
                OnHeighChanging(value);
                ReportPropertyChanging("Heigh");
                _Heigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Heigh");
                OnHeighChanged();
            }
        }
        private global::System.Double _Heigh;
        partial void OnHeighChanging(global::System.Double value);
        partial void OnHeighChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int16 _Type;
        partial void OnTypeChanging(global::System.Int16 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkDeskType
        {
            get
            {
                return _WorkDeskType;
            }
            set
            {
                OnWorkDeskTypeChanging(value);
                ReportPropertyChanging("WorkDeskType");
                _WorkDeskType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkDeskType");
                OnWorkDeskTypeChanged();
            }
        }
        private global::System.String _WorkDeskType;
        partial void OnWorkDeskTypeChanging(global::System.String value);
        partial void OnWorkDeskTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="DWPlatePosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DWPlatePosition : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DWPlatePosition 对象。
        /// </summary>
        /// <param name="dWPlatePositionID">DWPlatePositionID 属性的初始值。</param>
        /// <param name="position">Position 属性的初始值。</param>
        /// <param name="plateID">PlateID 属性的初始值。</param>
        public static DWPlatePosition CreateDWPlatePosition(global::System.Guid dWPlatePositionID, global::System.Int32 position, global::System.Guid plateID)
        {
            DWPlatePosition dWPlatePosition = new DWPlatePosition();
            dWPlatePosition.DWPlatePositionID = dWPlatePositionID;
            dWPlatePosition.Position = position;
            dWPlatePosition.PlateID = plateID;
            return dWPlatePosition;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DWPlatePositionID
        {
            get
            {
                return _DWPlatePositionID;
            }
            set
            {
                if (_DWPlatePositionID != value)
                {
                    OnDWPlatePositionIDChanging(value);
                    ReportPropertyChanging("DWPlatePositionID");
                    _DWPlatePositionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DWPlatePositionID");
                    OnDWPlatePositionIDChanged();
                }
            }
        }
        private global::System.Guid _DWPlatePositionID;
        partial void OnDWPlatePositionIDChanging(global::System.Guid value);
        partial void OnDWPlatePositionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TubeGroupID
        {
            get
            {
                return _TubeGroupID;
            }
            set
            {
                OnTubeGroupIDChanging(value);
                ReportPropertyChanging("TubeGroupID");
                _TubeGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TubeGroupID");
                OnTubeGroupIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TubeGroupID;
        partial void OnTubeGroupIDChanging(Nullable<global::System.Guid> value);
        partial void OnTubeGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PlateID
        {
            get
            {
                return _PlateID;
            }
            set
            {
                OnPlateIDChanging(value);
                ReportPropertyChanging("PlateID");
                _PlateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlateID");
                OnPlateIDChanged();
            }
        }
        private global::System.Guid _PlateID;
        partial void OnPlateIDChanging(global::System.Guid value);
        partial void OnPlateIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_DWPlatePosition_Plates", "Plate")]
        public Plate Plate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plate>("WanTaiModel.FK_DWPlatePosition_Plates", "Plate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plate>("WanTaiModel.FK_DWPlatePosition_Plates", "Plate").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Plate> PlateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plate>("WanTaiModel.FK_DWPlatePosition_Plates", "Plate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Plate>("WanTaiModel.FK_DWPlatePosition_Plates", "Plate", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "PCRPlatePosition_DWPlatePosition", "PCRPlatePosition")]
        public EntityCollection<PCRPlatePosition> PCRPlatePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PCRPlatePosition>("WanTaiModel.PCRPlatePosition_DWPlatePosition", "PCRPlatePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PCRPlatePosition>("WanTaiModel.PCRPlatePosition_DWPlatePosition", "PCRPlatePosition", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "Tube_PlatePosition", "Tube")]
        public EntityCollection<Tube> Tubes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tube>("WanTaiModel.Tube_PlatePosition", "Tube");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tube>("WanTaiModel.Tube_PlatePosition", "Tube", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="ExperimentsInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExperimentsInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ExperimentsInfo 对象。
        /// </summary>
        /// <param name="experimentID">ExperimentID 属性的初始值。</param>
        /// <param name="experimentName">ExperimentName 属性的初始值。</param>
        /// <param name="startTime">StartTime 属性的初始值。</param>
        /// <param name="loginName">LoginName 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        public static ExperimentsInfo CreateExperimentsInfo(global::System.Guid experimentID, global::System.String experimentName, global::System.DateTime startTime, global::System.String loginName, global::System.Int16 state)
        {
            ExperimentsInfo experimentsInfo = new ExperimentsInfo();
            experimentsInfo.ExperimentID = experimentID;
            experimentsInfo.ExperimentName = experimentName;
            experimentsInfo.StartTime = startTime;
            experimentsInfo.LoginName = loginName;
            experimentsInfo.State = state;
            return experimentsInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                if (_ExperimentID != value)
                {
                    OnExperimentIDChanging(value);
                    ReportPropertyChanging("ExperimentID");
                    _ExperimentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExperimentID");
                    OnExperimentIDChanged();
                }
            }
        }
        private global::System.Guid _ExperimentID;
        partial void OnExperimentIDChanging(global::System.Guid value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExperimentName
        {
            get
            {
                return _ExperimentName;
            }
            set
            {
                OnExperimentNameChanging(value);
                ReportPropertyChanging("ExperimentName");
                _ExperimentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExperimentName");
                OnExperimentNameChanged();
            }
        }
        private global::System.String _ExperimentName;
        partial void OnExperimentNameChanging(global::System.String value);
        partial void OnExperimentNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int16 _State;
        partial void OnStateChanging(global::System.Int16 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MixTimes
        {
            get
            {
                return _MixTimes;
            }
            set
            {
                OnMixTimesChanging(value);
                ReportPropertyChanging("MixTimes");
                _MixTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MixTimes");
                OnMixTimesChanged();
            }
        }
        private Nullable<global::System.Int16> _MixTimes;
        partial void OnMixTimesChanging(Nullable<global::System.Int16> value);
        partial void OnMixTimesChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_TubesBatch_ExperimentsInfo", "TubesBatch")]
        public EntityCollection<TubesBatch> TubesBatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TubesBatch>("WanTaiModel.FK_TubesBatch_ExperimentsInfo", "TubesBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TubesBatch>("WanTaiModel.FK_TubesBatch_ExperimentsInfo", "TubesBatch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="LogInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 LogInfo 对象。
        /// </summary>
        /// <param name="logID">LogID 属性的初始值。</param>
        public static LogInfo CreateLogInfo(global::System.Guid logID)
        {
            LogInfo logInfo = new LogInfo();
            logInfo.LogID = logID;
            return logInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Guid _LogID;
        partial void OnLogIDChanging(global::System.Guid value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogContent
        {
            get
            {
                return _LogContent;
            }
            set
            {
                OnLogContentChanging(value);
                ReportPropertyChanging("LogContent");
                _LogContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogContent");
                OnLogContentChanged();
            }
        }
        private global::System.String _LogContent;
        partial void OnLogContentChanging(global::System.String value);
        partial void OnLogContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> LogLevel
        {
            get
            {
                return _LogLevel;
            }
            set
            {
                OnLogLevelChanging(value);
                ReportPropertyChanging("LogLevel");
                _LogLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogLevel");
                OnLogLevelChanged();
            }
        }
        private Nullable<global::System.Int16> _LogLevel;
        partial void OnLogLevelChanging(Nullable<global::System.Int16> value);
        partial void OnLogLevelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreaterTime
        {
            get
            {
                return _CreaterTime;
            }
            set
            {
                OnCreaterTimeChanging(value);
                ReportPropertyChanging("CreaterTime");
                _CreaterTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreaterTime");
                OnCreaterTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreaterTime;
        partial void OnCreaterTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreaterTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Module
        {
            get
            {
                return _Module;
            }
            set
            {
                OnModuleChanging(value);
                ReportPropertyChanging("Module");
                _Module = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Module");
                OnModuleChanged();
            }
        }
        private global::System.String _Module;
        partial void OnModuleChanging(global::System.String value);
        partial void OnModuleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ExperimentID;
        partial void OnExperimentIDChanging(Nullable<global::System.Guid> value);
        partial void OnExperimentIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="OperationConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperationConfiguration : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OperationConfiguration 对象。
        /// </summary>
        /// <param name="operationID">OperationID 属性的初始值。</param>
        /// <param name="operationName">OperationName 属性的初始值。</param>
        /// <param name="operationType">OperationType 属性的初始值。</param>
        /// <param name="operationSequence">OperationSequence 属性的初始值。</param>
        /// <param name="activeStatus">ActiveStatus 属性的初始值。</param>
        public static OperationConfiguration CreateOperationConfiguration(global::System.Guid operationID, global::System.String operationName, global::System.Int16 operationType, global::System.Int16 operationSequence, global::System.Boolean activeStatus)
        {
            OperationConfiguration operationConfiguration = new OperationConfiguration();
            operationConfiguration.OperationID = operationID;
            operationConfiguration.OperationName = operationName;
            operationConfiguration.OperationType = operationType;
            operationConfiguration.OperationSequence = operationSequence;
            operationConfiguration.ActiveStatus = activeStatus;
            return operationConfiguration;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationID
        {
            get
            {
                return _OperationID;
            }
            set
            {
                if (_OperationID != value)
                {
                    OnOperationIDChanging(value);
                    ReportPropertyChanging("OperationID");
                    _OperationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationID");
                    OnOperationIDChanged();
                }
            }
        }
        private global::System.Guid _OperationID;
        partial void OnOperationIDChanging(global::System.Guid value);
        partial void OnOperationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OperationName
        {
            get
            {
                return _OperationName;
            }
            set
            {
                OnOperationNameChanging(value);
                ReportPropertyChanging("OperationName");
                _OperationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OperationName");
                OnOperationNameChanged();
            }
        }
        private global::System.String _OperationName;
        partial void OnOperationNameChanging(global::System.String value);
        partial void OnOperationNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OperationType
        {
            get
            {
                return _OperationType;
            }
            set
            {
                OnOperationTypeChanging(value);
                ReportPropertyChanging("OperationType");
                _OperationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationType");
                OnOperationTypeChanged();
            }
        }
        private global::System.Int16 _OperationType;
        partial void OnOperationTypeChanging(global::System.Int16 value);
        partial void OnOperationTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OperationSequence
        {
            get
            {
                return _OperationSequence;
            }
            set
            {
                OnOperationSequenceChanging(value);
                ReportPropertyChanging("OperationSequence");
                _OperationSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationSequence");
                OnOperationSequenceChanged();
            }
        }
        private global::System.Int16 _OperationSequence;
        partial void OnOperationSequenceChanging(global::System.Int16 value);
        partial void OnOperationSequenceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubOperationIDs
        {
            get
            {
                return _SubOperationIDs;
            }
            set
            {
                OnSubOperationIDsChanging(value);
                ReportPropertyChanging("SubOperationIDs");
                _SubOperationIDs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubOperationIDs");
                OnSubOperationIDsChanged();
            }
        }
        private global::System.String _SubOperationIDs;
        partial void OnSubOperationIDsChanging(global::System.String value);
        partial void OnSubOperationIDsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DisplayFlag
        {
            get
            {
                return _DisplayFlag;
            }
            set
            {
                OnDisplayFlagChanging(value);
                ReportPropertyChanging("DisplayFlag");
                _DisplayFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayFlag");
                OnDisplayFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _DisplayFlag;
        partial void OnDisplayFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnDisplayFlagChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScriptFileName
        {
            get
            {
                return _ScriptFileName;
            }
            set
            {
                OnScriptFileNameChanging(value);
                ReportPropertyChanging("ScriptFileName");
                _ScriptFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScriptFileName");
                OnScriptFileNameChanged();
            }
        }
        private global::System.String _ScriptFileName;
        partial void OnScriptFileNameChanging(global::System.String value);
        partial void OnScriptFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RunTime
        {
            get
            {
                return _RunTime;
            }
            set
            {
                OnRunTimeChanging(value);
                ReportPropertyChanging("RunTime");
                _RunTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunTime");
                OnRunTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _RunTime;
        partial void OnRunTimeChanging(Nullable<global::System.Int32> value);
        partial void OnRunTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StartOperationFileName
        {
            get
            {
                return _StartOperationFileName;
            }
            set
            {
                OnStartOperationFileNameChanging(value);
                ReportPropertyChanging("StartOperationFileName");
                _StartOperationFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StartOperationFileName");
                OnStartOperationFileNameChanged();
            }
        }
        private global::System.String _StartOperationFileName;
        partial void OnStartOperationFileNameChanging(global::System.String value);
        partial void OnStartOperationFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndOperationFileName
        {
            get
            {
                return _EndOperationFileName;
            }
            set
            {
                OnEndOperationFileNameChanging(value);
                ReportPropertyChanging("EndOperationFileName");
                _EndOperationFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndOperationFileName");
                OnEndOperationFileNameChanged();
            }
        }
        private global::System.String _EndOperationFileName;
        partial void OnEndOperationFileNameChanging(global::System.String value);
        partial void OnEndOperationFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveStatus
        {
            get
            {
                return _ActiveStatus;
            }
            set
            {
                OnActiveStatusChanging(value);
                ReportPropertyChanging("ActiveStatus");
                _ActiveStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveStatus");
                OnActiveStatusChanged();
            }
        }
        private global::System.Boolean _ActiveStatus;
        partial void OnActiveStatusChanging(global::System.Boolean value);
        partial void OnActiveStatusChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_RotationOperate_OperationConfiguration", "RotationOperate")]
        public EntityCollection<RotationOperate> RotationOperates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RotationOperate>("WanTaiModel.FK_RotationOperate_OperationConfiguration", "RotationOperate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RotationOperate>("WanTaiModel.FK_RotationOperate_OperationConfiguration", "RotationOperate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="PCRPlatePosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PCRPlatePosition : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PCRPlatePosition 对象。
        /// </summary>
        /// <param name="pCRPlatePositionID">PCRPlatePositionID 属性的初始值。</param>
        public static PCRPlatePosition CreatePCRPlatePosition(global::System.Guid pCRPlatePositionID)
        {
            PCRPlatePosition pCRPlatePosition = new PCRPlatePosition();
            pCRPlatePosition.PCRPlatePositionID = pCRPlatePositionID;
            return pCRPlatePosition;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PCRPlatePositionID
        {
            get
            {
                return _PCRPlatePositionID;
            }
            set
            {
                if (_PCRPlatePositionID != value)
                {
                    OnPCRPlatePositionIDChanging(value);
                    ReportPropertyChanging("PCRPlatePositionID");
                    _PCRPlatePositionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PCRPlatePositionID");
                    OnPCRPlatePositionIDChanged();
                }
            }
        }
        private global::System.Guid _PCRPlatePositionID;
        partial void OnPCRPlatePositionIDChanging(global::System.Guid value);
        partial void OnPCRPlatePositionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _Position;
        partial void OnPositionChanging(Nullable<global::System.Int32> value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PlateID
        {
            get
            {
                return _PlateID;
            }
            set
            {
                OnPlateIDChanging(value);
                ReportPropertyChanging("PlateID");
                _PlateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlateID");
                OnPlateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PlateID;
        partial void OnPlateIDChanging(Nullable<global::System.Guid> value);
        partial void OnPlateIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestName
        {
            get
            {
                return _TestName;
            }
            set
            {
                OnTestNameChanging(value);
                ReportPropertyChanging("TestName");
                _TestName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestName");
                OnTestNameChanged();
            }
        }
        private global::System.String _TestName;
        partial void OnTestNameChanging(global::System.String value);
        partial void OnTestNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_PCRPlatePosition_Plates", "Plate")]
        public Plate Plate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plate>("WanTaiModel.FK_PCRPlatePosition_Plates", "Plate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plate>("WanTaiModel.FK_PCRPlatePosition_Plates", "Plate").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Plate> PlateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plate>("WanTaiModel.FK_PCRPlatePosition_Plates", "Plate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Plate>("WanTaiModel.FK_PCRPlatePosition_Plates", "Plate", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "PCRPlatePosition_DWPlatePosition", "DWPlatePosition")]
        public EntityCollection<DWPlatePosition> DWPlatePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DWPlatePosition>("WanTaiModel.PCRPlatePosition_DWPlatePosition", "DWPlatePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DWPlatePosition>("WanTaiModel.PCRPlatePosition_DWPlatePosition", "DWPlatePosition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="PCRTestResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PCRTestResult : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PCRTestResult 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        /// <param name="rotationID">RotationID 属性的初始值。</param>
        /// <param name="position">Position 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        public static PCRTestResult CreatePCRTestResult(global::System.Guid itemID, global::System.Guid rotationID, global::System.Int32 position, global::System.DateTime createTime)
        {
            PCRTestResult pCRTestResult = new PCRTestResult();
            pCRTestResult.ItemID = itemID;
            pCRTestResult.RotationID = rotationID;
            pCRTestResult.Position = position;
            pCRTestResult.CreateTime = createTime;
            return pCRTestResult;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RotationID
        {
            get
            {
                return _RotationID;
            }
            set
            {
                OnRotationIDChanging(value);
                ReportPropertyChanging("RotationID");
                _RotationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotationID");
                OnRotationIDChanged();
            }
        }
        private global::System.Guid _RotationID;
        partial void OnRotationIDChanging(global::System.Guid value);
        partial void OnRotationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.String _Result;
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ExperimentID;
        partial void OnExperimentIDChanging(Nullable<global::System.Guid> value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PCRContent
        {
            get
            {
                return _PCRContent;
            }
            set
            {
                OnPCRContentChanging(value);
                ReportPropertyChanging("PCRContent");
                _PCRContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PCRContent");
                OnPCRContentChanged();
            }
        }
        private global::System.String _PCRContent;
        partial void OnPCRContentChanging(global::System.String value);
        partial void OnPCRContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PlateID
        {
            get
            {
                return _PlateID;
            }
            set
            {
                OnPlateIDChanging(value);
                ReportPropertyChanging("PlateID");
                _PlateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlateID");
                OnPlateIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PlateID;
        partial void OnPlateIDChanging(Nullable<global::System.Guid> value);
        partial void OnPlateIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="Plate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plate : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Plate 对象。
        /// </summary>
        /// <param name="plateID">PlateID 属性的初始值。</param>
        public static Plate CreatePlate(global::System.Guid plateID)
        {
            Plate plate = new Plate();
            plate.PlateID = plateID;
            return plate;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PlateID
        {
            get
            {
                return _PlateID;
            }
            set
            {
                if (_PlateID != value)
                {
                    OnPlateIDChanging(value);
                    ReportPropertyChanging("PlateID");
                    _PlateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlateID");
                    OnPlateIDChanged();
                }
            }
        }
        private global::System.Guid _PlateID;
        partial void OnPlateIDChanging(global::System.Guid value);
        partial void OnPlateIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlateName
        {
            get
            {
                return _PlateName;
            }
            set
            {
                OnPlateNameChanging(value);
                ReportPropertyChanging("PlateName");
                _PlateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlateName");
                OnPlateNameChanged();
            }
        }
        private global::System.String _PlateName;
        partial void OnPlateNameChanging(global::System.String value);
        partial void OnPlateNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RotationID
        {
            get
            {
                return _RotationID;
            }
            set
            {
                OnRotationIDChanging(value);
                ReportPropertyChanging("RotationID");
                _RotationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotationID");
                OnRotationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RotationID;
        partial void OnRotationIDChanging(Nullable<global::System.Guid> value);
        partial void OnRotationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> PlateType
        {
            get
            {
                return _PlateType;
            }
            set
            {
                OnPlateTypeChanging(value);
                ReportPropertyChanging("PlateType");
                _PlateType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlateType");
                OnPlateTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _PlateType;
        partial void OnPlateTypeChanging(Nullable<global::System.Int16> value);
        partial void OnPlateTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ExperimentID;
        partial void OnExperimentIDChanging(Nullable<global::System.Guid> value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PCRContent
        {
            get
            {
                return _PCRContent;
            }
            set
            {
                OnPCRContentChanging(value);
                ReportPropertyChanging("PCRContent");
                _PCRContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PCRContent");
                OnPCRContentChanged();
            }
        }
        private global::System.String _PCRContent;
        partial void OnPCRContentChanging(global::System.String value);
        partial void OnPCRContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TubesBatchID
        {
            get
            {
                return _TubesBatchID;
            }
            set
            {
                OnTubesBatchIDChanging(value);
                ReportPropertyChanging("TubesBatchID");
                _TubesBatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TubesBatchID");
                OnTubesBatchIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TubesBatchID;
        partial void OnTubesBatchIDChanging(Nullable<global::System.Guid> value);
        partial void OnTubesBatchIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_DWPlatePosition_Plates", "DWPlatePosition")]
        public EntityCollection<DWPlatePosition> DWPlatePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DWPlatePosition>("WanTaiModel.FK_DWPlatePosition_Plates", "DWPlatePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DWPlatePosition>("WanTaiModel.FK_DWPlatePosition_Plates", "DWPlatePosition", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_PCRPlatePosition_Plates", "PCRPlatePosition")]
        public EntityCollection<PCRPlatePosition> PCRPlatePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PCRPlatePosition>("WanTaiModel.FK_PCRPlatePosition_Plates", "PCRPlatePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PCRPlatePosition>("WanTaiModel.FK_PCRPlatePosition_Plates", "PCRPlatePosition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="PoolingRulesConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PoolingRulesConfiguration : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PoolingRulesConfiguration 对象。
        /// </summary>
        /// <param name="poolingRulesID">PoolingRulesID 属性的初始值。</param>
        /// <param name="poolingRulesName">PoolingRulesName 属性的初始值。</param>
        /// <param name="tubeNumber">TubeNumber 属性的初始值。</param>
        /// <param name="activeStatus">ActiveStatus 属性的初始值。</param>
        /// <param name="activeStatus">GroupColor 属性的初始值。</param>
        public static PoolingRulesConfiguration CreatePoolingRulesConfiguration(global::System.Guid poolingRulesID, global::System.String poolingRulesName, global::System.Int32 tubeNumber, global::System.Boolean activeStatus, global::System.String groupColor)
        {
            PoolingRulesConfiguration poolingRulesConfiguration = new PoolingRulesConfiguration();
            poolingRulesConfiguration.PoolingRulesID = poolingRulesID;
            poolingRulesConfiguration.PoolingRulesName = poolingRulesName;
            poolingRulesConfiguration.TubeNumber = tubeNumber;
            poolingRulesConfiguration.ActiveStatus = activeStatus;
            poolingRulesConfiguration.GroupColor = groupColor;
            return poolingRulesConfiguration;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PoolingRulesID
        {
            get
            {
                return _PoolingRulesID;
            }
            set
            {
                if (_PoolingRulesID != value)
                {
                    OnPoolingRulesIDChanging(value);
                    ReportPropertyChanging("PoolingRulesID");
                    _PoolingRulesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PoolingRulesID");
                    OnPoolingRulesIDChanged();
                }
            }
        }
        private global::System.Guid _PoolingRulesID;
        partial void OnPoolingRulesIDChanging(global::System.Guid value);
        partial void OnPoolingRulesIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PoolingRulesName
        {
            get
            {
                return _PoolingRulesName;
            }
            set
            {
                OnPoolingRulesNameChanging(value);
                ReportPropertyChanging("PoolingRulesName");
                _PoolingRulesName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PoolingRulesName");
                OnPoolingRulesNameChanged();
            }
        }
        private global::System.String _PoolingRulesName;
        partial void OnPoolingRulesNameChanging(global::System.String value);
        partial void OnPoolingRulesNameChanged();


        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String GroupColor
        {
            get
            {
                return _GroupColor;
            }
            set
            {
                OnGroupColorChanging(value);
                ReportPropertyChanging("GroupColor");
                _GroupColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupColor");
                OnGroupColorChanged();
            }
        }
        private global::System.String _GroupColor;
        partial void OnGroupColorChanging(global::System.String value);
        partial void OnGroupColorChanged();
    

        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TubeNumber
        {
            get
            {
                return _TubeNumber;
            }
            set
            {
                OnTubeNumberChanging(value);
                ReportPropertyChanging("TubeNumber");
                _TubeNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TubeNumber");
                OnTubeNumberChanged();
            }
        }
        private global::System.Int32 _TubeNumber;
        partial void OnTubeNumberChanging(global::System.Int32 value);
        partial void OnTubeNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveStatus
        {
            get
            {
                return _ActiveStatus;
            }
            set
            {
                OnActiveStatusChanging(value);
                ReportPropertyChanging("ActiveStatus");
                _ActiveStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveStatus");
                OnActiveStatusChanged();
            }
        }
        private global::System.Boolean _ActiveStatus;
        partial void OnActiveStatusChanging(global::System.Boolean value);
        partial void OnActiveStatusChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_TubeGroup_PoolingRulesConfiguration", "TubeGroup")]
        public EntityCollection<TubeGroup> TubeGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TubeGroup>("WanTaiModel.FK_TubeGroup_PoolingRulesConfiguration", "TubeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TubeGroup>("WanTaiModel.FK_TubeGroup_PoolingRulesConfiguration", "TubeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="ReagentAndSuppliesConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReagentAndSuppliesConfiguration : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReagentAndSuppliesConfiguration 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        /// <param name="englishName">EnglishName 属性的初始值。</param>
        /// <param name="displayName">DisplayName 属性的初始值。</param>
        /// <param name="position">Position 属性的初始值。</param>
        /// <param name="grid">Grid 属性的初始值。</param>
        /// <param name="activeStatus">ActiveStatus 属性的初始值。</param>
        public static ReagentAndSuppliesConfiguration CreateReagentAndSuppliesConfiguration(global::System.Guid itemID, global::System.String englishName, global::System.String displayName, global::System.Int32 position, global::System.Int32 grid, global::System.Boolean activeStatus)
        {
            ReagentAndSuppliesConfiguration reagentAndSuppliesConfiguration = new ReagentAndSuppliesConfiguration();
            reagentAndSuppliesConfiguration.ItemID = itemID;
            reagentAndSuppliesConfiguration.EnglishName = englishName;
            reagentAndSuppliesConfiguration.DisplayName = displayName;
            reagentAndSuppliesConfiguration.Position = position;
            reagentAndSuppliesConfiguration.Grid = grid;
            reagentAndSuppliesConfiguration.ActiveStatus = activeStatus;
            return reagentAndSuppliesConfiguration;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EnglishName
        {
            get
            {
                return _EnglishName;
            }
            set
            {
                OnEnglishNameChanging(value);
                ReportPropertyChanging("EnglishName");
                _EnglishName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EnglishName");
                OnEnglishNameChanged();
            }
        }
        private global::System.String _EnglishName;
        partial void OnEnglishNameChanging(global::System.String value);
        partial void OnEnglishNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Grid
        {
            get
            {
                return _Grid;
            }
            set
            {
                OnGridChanging(value);
                ReportPropertyChanging("Grid");
                _Grid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grid");
                OnGridChanged();
            }
        }
        private global::System.Int32 _Grid;
        partial void OnGridChanging(global::System.Int32 value);
        partial void OnGridChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _ItemType;
        partial void OnItemTypeChanging(Nullable<global::System.Int16> value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalculationFormula
        {
            get
            {
                return _CalculationFormula;
            }
            set
            {
                OnCalculationFormulaChanging(value);
                ReportPropertyChanging("CalculationFormula");
                _CalculationFormula = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CalculationFormula");
                OnCalculationFormulaChanged();
            }
        }
        private global::System.String _CalculationFormula;
        partial void OnCalculationFormulaChanging(global::System.String value);
        partial void OnCalculationFormulaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContainerName
        {
            get
            {
                return _ContainerName;
            }
            set
            {
                OnContainerNameChanging(value);
                ReportPropertyChanging("ContainerName");
                _ContainerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContainerName");
                OnContainerNameChanged();
            }
        }
        private global::System.String _ContainerName;
        partial void OnContainerNameChanging(global::System.String value);
        partial void OnContainerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarcodePrefix
        {
            get
            {
                return _BarcodePrefix;
            }
            set
            {
                OnBarcodePrefixChanging(value);
                ReportPropertyChanging("BarcodePrefix");
                _BarcodePrefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarcodePrefix");
                OnBarcodePrefixChanged();
            }
        }
        private global::System.String _BarcodePrefix;
        partial void OnBarcodePrefixChanging(global::System.String value);
        partial void OnBarcodePrefixChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveStatus
        {
            get
            {
                return _ActiveStatus;
            }
            set
            {
                OnActiveStatusChanging(value);
                ReportPropertyChanging("ActiveStatus");
                _ActiveStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveStatus");
                OnActiveStatusChanged();
            }
        }
        private global::System.Boolean _ActiveStatus;
        partial void OnActiveStatusChanging(global::System.Boolean value);
        partial void OnActiveStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SimpleTrackingVolumn
        {
            get
            {
                return _SimpleTrackingVolumn;
            }
            set
            {
                OnSimpleTrackingVolumnChanging(value);
                ReportPropertyChanging("SimpleTrackingVolumn");
                _SimpleTrackingVolumn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimpleTrackingVolumn");
                OnSimpleTrackingVolumnChanged();
            }
        }
        private Nullable<global::System.Double> _SimpleTrackingVolumn;
        partial void OnSimpleTrackingVolumnChanging(Nullable<global::System.Double> value);
        partial void OnSimpleTrackingVolumnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkDeskType
        {
            get
            {
                return _WorkDeskType;
            }
            set
            {
                OnWorkDeskTypeChanging(value);
                ReportPropertyChanging("WorkDeskType");
                _WorkDeskType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkDeskType");
                OnWorkDeskTypeChanged();
            }
        }
        private global::System.String _WorkDeskType;
        partial void OnWorkDeskTypeChanging(global::System.String value);
        partial void OnWorkDeskTypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSupply")]
        public EntityCollection<ReagentAndSupply> ReagentAndSupplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReagentAndSupply>("WanTaiModel.FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSupply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReagentAndSupply>("WanTaiModel.FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSupply", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="ReagentAndSupply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReagentAndSupply : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReagentAndSupply 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        public static ReagentAndSupply CreateReagentAndSupply(global::System.Guid itemID)
        {
            ReagentAndSupply reagentAndSupply = new ReagentAndSupply();
            reagentAndSupply.ItemID = itemID;
            return reagentAndSupply;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _ItemType;
        partial void OnItemTypeChanging(Nullable<global::System.Int16> value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ExperimentID;
        partial void OnExperimentIDChanging(Nullable<global::System.Guid> value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ConfigurationItemID
        {
            get
            {
                return _ConfigurationItemID;
            }
            set
            {
                OnConfigurationItemIDChanging(value);
                ReportPropertyChanging("ConfigurationItemID");
                _ConfigurationItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurationItemID");
                OnConfigurationItemIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ConfigurationItemID;
        partial void OnConfigurationItemIDChanging(Nullable<global::System.Guid> value);
        partial void OnConfigurationItemIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSuppliesConfiguration")]
        public ReagentAndSuppliesConfiguration ReagentAndSuppliesConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReagentAndSuppliesConfiguration>("WanTaiModel.FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSuppliesConfiguration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReagentAndSuppliesConfiguration>("WanTaiModel.FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSuppliesConfiguration").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReagentAndSuppliesConfiguration> ReagentAndSuppliesConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReagentAndSuppliesConfiguration>("WanTaiModel.FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSuppliesConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReagentAndSuppliesConfiguration>("WanTaiModel.FK_ReagentAndSupplies_ReagentAndSuppliesConfiguration", "ReagentAndSuppliesConfiguration", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentsAndSuppliesConsumption")]
        public EntityCollection<ReagentsAndSuppliesConsumption> ReagentsAndSuppliesConsumptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReagentsAndSuppliesConsumption>("WanTaiModel.FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentsAndSuppliesConsumption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReagentsAndSuppliesConsumption>("WanTaiModel.FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentsAndSuppliesConsumption", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="ReagentsAndSuppliesConsumption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReagentsAndSuppliesConsumption : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReagentsAndSuppliesConsumption 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        /// <param name="experimentID">ExperimentID 属性的初始值。</param>
        public static ReagentsAndSuppliesConsumption CreateReagentsAndSuppliesConsumption(global::System.Guid itemID, global::System.Guid experimentID)
        {
            ReagentsAndSuppliesConsumption reagentsAndSuppliesConsumption = new ReagentsAndSuppliesConsumption();
            reagentsAndSuppliesConsumption.ItemID = itemID;
            reagentsAndSuppliesConsumption.ExperimentID = experimentID;
            return reagentsAndSuppliesConsumption;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Double> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Double> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private global::System.Guid _ExperimentID;
        partial void OnExperimentIDChanging(global::System.Guid value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> VolumeType
        {
            get
            {
                return _VolumeType;
            }
            set
            {
                OnVolumeTypeChanging(value);
                ReportPropertyChanging("VolumeType");
                _VolumeType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VolumeType");
                OnVolumeTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _VolumeType;
        partial void OnVolumeTypeChanging(Nullable<global::System.Int16> value);
        partial void OnVolumeTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReagentAndSupplieID
        {
            get
            {
                return _ReagentAndSupplieID;
            }
            set
            {
                OnReagentAndSupplieIDChanging(value);
                ReportPropertyChanging("ReagentAndSupplieID");
                _ReagentAndSupplieID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReagentAndSupplieID");
                OnReagentAndSupplieIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ReagentAndSupplieID;
        partial void OnReagentAndSupplieIDChanging(Nullable<global::System.Guid> value);
        partial void OnReagentAndSupplieIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RotationID
        {
            get
            {
                return _RotationID;
            }
            set
            {
                OnRotationIDChanging(value);
                ReportPropertyChanging("RotationID");
                _RotationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotationID");
                OnRotationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RotationID;
        partial void OnRotationIDChanging(Nullable<global::System.Guid> value);
        partial void OnRotationIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentAndSupply")]
        public ReagentAndSupply ReagentAndSupply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReagentAndSupply>("WanTaiModel.FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentAndSupply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReagentAndSupply>("WanTaiModel.FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentAndSupply").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReagentAndSupply> ReagentAndSupplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReagentAndSupply>("WanTaiModel.FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentAndSupply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReagentAndSupply>("WanTaiModel.FK_ReagentsAndSuppliesConsumption_ReagentAndSupplies", "ReagentAndSupply", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="ReportConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportConfiguration : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReportConfiguration 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        /// <param name="displayName">DisplayName 属性的初始值。</param>
        /// <param name="position">Position 属性的初始值。</param>
        /// <param name="activeStatus">ActiveStatus 属性的初始值。</param>
        public static ReportConfiguration CreateReportConfiguration(global::System.Guid itemID, global::System.String displayName, global::System.Int32 position, global::System.Boolean activeStatus)
        {
            ReportConfiguration reportConfiguration = new ReportConfiguration();
            reportConfiguration.ItemID = itemID;
            reportConfiguration.DisplayName = displayName;
            reportConfiguration.Position = position;
            reportConfiguration.ActiveStatus = activeStatus;
            return reportConfiguration;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalculationFormula
        {
            get
            {
                return _CalculationFormula;
            }
            set
            {
                OnCalculationFormulaChanging(value);
                ReportPropertyChanging("CalculationFormula");
                _CalculationFormula = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CalculationFormula");
                OnCalculationFormulaChanged();
            }
        }
        private global::System.String _CalculationFormula;
        partial void OnCalculationFormulaChanging(global::System.String value);
        partial void OnCalculationFormulaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveStatus
        {
            get
            {
                return _ActiveStatus;
            }
            set
            {
                OnActiveStatusChanging(value);
                ReportPropertyChanging("ActiveStatus");
                _ActiveStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveStatus");
                OnActiveStatusChanged();
            }
        }
        private global::System.Boolean _ActiveStatus;
        partial void OnActiveStatusChanging(global::System.Boolean value);
        partial void OnActiveStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkDeskType
        {
            get
            {
                return _WorkDeskType;
            }
            set
            {
                OnWorkDeskTypeChanging(value);
                ReportPropertyChanging("WorkDeskType");
                _WorkDeskType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkDeskType");
                OnWorkDeskTypeChanged();
            }
        }
        private global::System.String _WorkDeskType;
        partial void OnWorkDeskTypeChanging(global::System.String value);
        partial void OnWorkDeskTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="RoleInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RoleInfo 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="roleName">RoleName 属性的初始值。</param>
        /// <param name="roleModules">RoleModules 属性的初始值。</param>
        /// <param name="roleLevel">RoleLevel 属性的初始值。</param>
        public static RoleInfo CreateRoleInfo(global::System.Guid roleID, global::System.String roleName, global::System.String roleModules, global::System.Int16 roleLevel)
        {
            RoleInfo roleInfo = new RoleInfo();
            roleInfo.RoleID = roleID;
            roleInfo.RoleName = roleName;
            roleInfo.RoleModules = roleModules;
            roleInfo.RoleLevel = roleLevel;
            return roleInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Guid _RoleID;
        partial void OnRoleIDChanging(global::System.Guid value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleModules
        {
            get
            {
                return _RoleModules;
            }
            set
            {
                OnRoleModulesChanging(value);
                ReportPropertyChanging("RoleModules");
                _RoleModules = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleModules");
                OnRoleModulesChanged();
            }
        }
        private global::System.String _RoleModules;
        partial void OnRoleModulesChanging(global::System.String value);
        partial void OnRoleModulesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RoleLevel
        {
            get
            {
                return _RoleLevel;
            }
            set
            {
                OnRoleLevelChanging(value);
                ReportPropertyChanging("RoleLevel");
                _RoleLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleLevel");
                OnRoleLevelChanged();
            }
        }
        private global::System.Int16 _RoleLevel;
        partial void OnRoleLevelChanging(global::System.Int16 value);
        partial void OnRoleLevelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="RotationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RotationInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RotationInfo 对象。
        /// </summary>
        /// <param name="rotationID">RotationID 属性的初始值。</param>
        /// <param name="experimentID">ExperimentID 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        /// <param name="operationID">OperationID 属性的初始值。</param>
        /// <param name="operationName">OperationName 属性的初始值。</param>
        public static RotationInfo CreateRotationInfo(global::System.Guid rotationID, global::System.Guid experimentID, global::System.Int16 state, global::System.DateTime createTime, global::System.Guid operationID, global::System.String operationName)
        {
            RotationInfo rotationInfo = new RotationInfo();
            rotationInfo.RotationID = rotationID;
            rotationInfo.ExperimentID = experimentID;
            rotationInfo.State = state;
            rotationInfo.CreateTime = createTime;
            rotationInfo.OperationID = operationID;
            rotationInfo.OperationName = operationName;
            return rotationInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RotationID
        {
            get
            {
                return _RotationID;
            }
            set
            {
                if (_RotationID != value)
                {
                    OnRotationIDChanging(value);
                    ReportPropertyChanging("RotationID");
                    _RotationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RotationID");
                    OnRotationIDChanged();
                }
            }
        }
        private global::System.Guid _RotationID;
        partial void OnRotationIDChanging(global::System.Guid value);
        partial void OnRotationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private global::System.Guid _ExperimentID;
        partial void OnExperimentIDChanging(global::System.Guid value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TubesBatchID
        {
            get
            {
                return _TubesBatchID;
            }
            set
            {
                OnTubesBatchIDChanging(value);
                ReportPropertyChanging("TubesBatchID");
                _TubesBatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TubesBatchID");
                OnTubesBatchIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TubesBatchID;
        partial void OnTubesBatchIDChanging(Nullable<global::System.Guid> value);
        partial void OnTubesBatchIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RotationName
        {
            get
            {
                return _RotationName;
            }
            set
            {
                OnRotationNameChanging(value);
                ReportPropertyChanging("RotationName");
                _RotationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RotationName");
                OnRotationNameChanged();
            }
        }
        private global::System.String _RotationName;
        partial void OnRotationNameChanging(global::System.String value);
        partial void OnRotationNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int16 _State;
        partial void OnStateChanging(global::System.Int16 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationID
        {
            get
            {
                return _OperationID;
            }
            set
            {
                OnOperationIDChanging(value);
                ReportPropertyChanging("OperationID");
                _OperationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationID");
                OnOperationIDChanged();
            }
        }
        private global::System.Guid _OperationID;
        partial void OnOperationIDChanging(global::System.Guid value);
        partial void OnOperationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OperationName
        {
            get
            {
                return _OperationName;
            }
            set
            {
                OnOperationNameChanging(value);
                ReportPropertyChanging("OperationName");
                _OperationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OperationName");
                OnOperationNameChanged();
            }
        }
        private global::System.String _OperationName;
        partial void OnOperationNameChanging(global::System.String value);
        partial void OnOperationNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> RotationSequence
        {
            get
            {
                return _RotationSequence;
            }
            set
            {
                OnRotationSequenceChanging(value);
                ReportPropertyChanging("RotationSequence");
                _RotationSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotationSequence");
                OnRotationSequenceChanged();
            }
        }
        private Nullable<global::System.Int16> _RotationSequence;
        partial void OnRotationSequenceChanging(Nullable<global::System.Int16> value);
        partial void OnRotationSequenceChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_RotationInfo_TubesBatch", "TubesBatch")]
        public TubesBatch TubesBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubesBatch>("WanTaiModel.FK_RotationInfo_TubesBatch", "TubesBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubesBatch>("WanTaiModel.FK_RotationInfo_TubesBatch", "TubesBatch").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TubesBatch> TubesBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubesBatch>("WanTaiModel.FK_RotationInfo_TubesBatch", "TubesBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TubesBatch>("WanTaiModel.FK_RotationInfo_TubesBatch", "TubesBatch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="RotationOperate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RotationOperate : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RotationOperate 对象。
        /// </summary>
        /// <param name="rotationOperateID">RotationOperateID 属性的初始值。</param>
        /// <param name="operationID">OperationID 属性的初始值。</param>
        /// <param name="rotationID">RotationID 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        /// <param name="experimentID">ExperimentID 属性的初始值。</param>
        public static RotationOperate CreateRotationOperate(global::System.Guid rotationOperateID, global::System.Guid operationID, global::System.Guid rotationID, global::System.Int16 state, global::System.Guid experimentID)
        {
            RotationOperate rotationOperate = new RotationOperate();
            rotationOperate.RotationOperateID = rotationOperateID;
            rotationOperate.OperationID = operationID;
            rotationOperate.RotationID = rotationID;
            rotationOperate.State = state;
            rotationOperate.ExperimentID = experimentID;
            return rotationOperate;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RotationOperateID
        {
            get
            {
                return _RotationOperateID;
            }
            set
            {
                if (_RotationOperateID != value)
                {
                    OnRotationOperateIDChanging(value);
                    ReportPropertyChanging("RotationOperateID");
                    _RotationOperateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RotationOperateID");
                    OnRotationOperateIDChanged();
                }
            }
        }
        private global::System.Guid _RotationOperateID;
        partial void OnRotationOperateIDChanging(global::System.Guid value);
        partial void OnRotationOperateIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationID
        {
            get
            {
                return _OperationID;
            }
            set
            {
                OnOperationIDChanging(value);
                ReportPropertyChanging("OperationID");
                _OperationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationID");
                OnOperationIDChanged();
            }
        }
        private global::System.Guid _OperationID;
        partial void OnOperationIDChanging(global::System.Guid value);
        partial void OnOperationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RotationID
        {
            get
            {
                return _RotationID;
            }
            set
            {
                OnRotationIDChanging(value);
                ReportPropertyChanging("RotationID");
                _RotationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotationID");
                OnRotationIDChanged();
            }
        }
        private global::System.Guid _RotationID;
        partial void OnRotationIDChanging(global::System.Guid value);
        partial void OnRotationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int16 _State;
        partial void OnStateChanging(global::System.Int16 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private global::System.Guid _ExperimentID;
        partial void OnExperimentIDChanging(global::System.Guid value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorLog
        {
            get
            {
                return _ErrorLog;
            }
            set
            {
                OnErrorLogChanging(value);
                ReportPropertyChanging("ErrorLog");
                _ErrorLog = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorLog");
                OnErrorLogChanged();
            }
        }
        private global::System.String _ErrorLog;
        partial void OnErrorLogChanging(global::System.String value);
        partial void OnErrorLogChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_RotationOperate_OperationConfiguration", "OperationConfiguration")]
        public OperationConfiguration OperationConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationConfiguration>("WanTaiModel.FK_RotationOperate_OperationConfiguration", "OperationConfiguration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationConfiguration>("WanTaiModel.FK_RotationOperate_OperationConfiguration", "OperationConfiguration").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OperationConfiguration> OperationConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationConfiguration>("WanTaiModel.FK_RotationOperate_OperationConfiguration", "OperationConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OperationConfiguration>("WanTaiModel.FK_RotationOperate_OperationConfiguration", "OperationConfiguration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="SampleTracking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SampleTracking : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SampleTracking 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        public static SampleTracking CreateSampleTracking(global::System.Guid itemID)
        {
            SampleTracking sampleTracking = new SampleTracking();
            sampleTracking.ItemID = itemID;
            return sampleTracking;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RotationID
        {
            get
            {
                return _RotationID;
            }
            set
            {
                OnRotationIDChanging(value);
                ReportPropertyChanging("RotationID");
                _RotationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotationID");
                OnRotationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RotationID;
        partial void OnRotationIDChanging(Nullable<global::System.Guid> value);
        partial void OnRotationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ExperimentsID
        {
            get
            {
                return _ExperimentsID;
            }
            set
            {
                OnExperimentsIDChanging(value);
                ReportPropertyChanging("ExperimentsID");
                _ExperimentsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentsID");
                OnExperimentsIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ExperimentsID;
        partial void OnExperimentsIDChanging(Nullable<global::System.Guid> value);
        partial void OnExperimentsIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OperationSequence
        {
            get
            {
                return _OperationSequence;
            }
            set
            {
                OnOperationSequenceChanging(value);
                ReportPropertyChanging("OperationSequence");
                _OperationSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationSequence");
                OnOperationSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _OperationSequence;
        partial void OnOperationSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnOperationSequenceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OperationID
        {
            get
            {
                return _OperationID;
            }
            set
            {
                OnOperationIDChanging(value);
                ReportPropertyChanging("OperationID");
                _OperationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationID");
                OnOperationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OperationID;
        partial void OnOperationIDChanging(Nullable<global::System.Guid> value);
        partial void OnOperationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RackID
        {
            get
            {
                return _RackID;
            }
            set
            {
                OnRackIDChanging(value);
                ReportPropertyChanging("RackID");
                _RackID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RackID");
                OnRackIDChanged();
            }
        }
        private global::System.String _RackID;
        partial void OnRackIDChanging(global::System.String value);
        partial void OnRackIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CavityID
        {
            get
            {
                return _CavityID;
            }
            set
            {
                OnCavityIDChanging(value);
                ReportPropertyChanging("CavityID");
                _CavityID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CavityID");
                OnCavityIDChanged();
            }
        }
        private global::System.String _CavityID;
        partial void OnCavityIDChanging(global::System.String value);
        partial void OnCavityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SampleID
        {
            get
            {
                return _SampleID;
            }
            set
            {
                OnSampleIDChanging(value);
                ReportPropertyChanging("SampleID");
                _SampleID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SampleID");
                OnSampleIDChanged();
            }
        }
        private global::System.String _SampleID;
        partial void OnSampleIDChanging(global::System.String value);
        partial void OnSampleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CONCENTRATION
        {
            get
            {
                return _CONCENTRATION;
            }
            set
            {
                OnCONCENTRATIONChanging(value);
                ReportPropertyChanging("CONCENTRATION");
                _CONCENTRATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CONCENTRATION");
                OnCONCENTRATIONChanged();
            }
        }
        private Nullable<global::System.Double> _CONCENTRATION;
        partial void OnCONCENTRATIONChanging(Nullable<global::System.Double> value);
        partial void OnCONCENTRATIONChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> VOLUME
        {
            get
            {
                return _VOLUME;
            }
            set
            {
                OnVOLUMEChanging(value);
                ReportPropertyChanging("VOLUME");
                _VOLUME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VOLUME");
                OnVOLUMEChanged();
            }
        }
        private Nullable<global::System.Double> _VOLUME;
        partial void OnVOLUMEChanging(Nullable<global::System.Double> value);
        partial void OnVOLUMEChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SampleErrors
        {
            get
            {
                return _SampleErrors;
            }
            set
            {
                OnSampleErrorsChanging(value);
                ReportPropertyChanging("SampleErrors");
                _SampleErrors = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SampleErrors");
                OnSampleErrorsChanged();
            }
        }
        private global::System.String _SampleErrors;
        partial void OnSampleErrorsChanging(global::System.String value);
        partial void OnSampleErrorsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsKeeping
        {
            get
            {
                return _IsKeeping;
            }
            set
            {
                OnIsKeepingChanging(value);
                ReportPropertyChanging("IsKeeping");
                _IsKeeping = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsKeeping");
                OnIsKeepingChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsKeeping;
        partial void OnIsKeepingChanging(Nullable<global::System.Boolean> value);
        partial void OnIsKeepingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="SystemConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemConfiguration : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SystemConfiguration 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        /// <param name="itemName">ItemName 属性的初始值。</param>
        /// <param name="itemCode">ItemCode 属性的初始值。</param>
        public static SystemConfiguration CreateSystemConfiguration(global::System.Guid itemID, global::System.String itemName, global::System.String itemCode)
        {
            SystemConfiguration systemConfiguration = new SystemConfiguration();
            systemConfiguration.ItemID = itemID;
            systemConfiguration.ItemName = itemName;
            systemConfiguration.ItemCode = itemCode;
            return systemConfiguration;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemValue
        {
            get
            {
                return _ItemValue;
            }
            set
            {
                OnItemValueChanging(value);
                ReportPropertyChanging("ItemValue");
                _ItemValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemValue");
                OnItemValueChanged();
            }
        }
        private global::System.String _ItemValue;
        partial void OnItemValueChanging(global::System.String value);
        partial void OnItemValueChanged();

        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String WorkDeskType
        {
            get
            {
                return _WorkDeskType;
            }
            set
            {
                OnWorkDeskTypeChanging(value);
                ReportPropertyChanging("WorkDeskType");
                _WorkDeskType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkDeskType");
                OnWorkDeskTypeChanged();
            }
        }
        private global::System.String _WorkDeskType;
        partial void OnWorkDeskTypeChanging(global::System.String value);
        partial void OnWorkDeskTypeChanged();

        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemCode
        {
            get
            {
                return _ItemCode;
            }
            set
            {
                OnItemCodeChanging(value);
                ReportPropertyChanging("ItemCode");
                _ItemCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemCode");
                OnItemCodeChanged();
            }
        }
        private global::System.String _ItemCode;
        partial void OnItemCodeChanging(global::System.String value);
        partial void OnItemCodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="SystemFluidConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemFluidConfiguration : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SystemFluidConfiguration 对象。
        /// </summary>
        /// <param name="itemID">ItemID 属性的初始值。</param>
        public static SystemFluidConfiguration CreateSystemFluidConfiguration(global::System.Guid itemID)
        {
            SystemFluidConfiguration systemFluidConfiguration = new SystemFluidConfiguration();
            systemFluidConfiguration.ItemID = itemID;
            return systemFluidConfiguration;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _Position;
        partial void OnPositionChanging(Nullable<global::System.Int32> value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Grid
        {
            get
            {
                return _Grid;
            }
            set
            {
                OnGridChanging(value);
                ReportPropertyChanging("Grid");
                _Grid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grid");
                OnGridChanged();
            }
        }
        private Nullable<global::System.Int32> _Grid;
        partial void OnGridChanging(Nullable<global::System.Int32> value);
        partial void OnGridChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _ItemType;
        partial void OnItemTypeChanging(Nullable<global::System.Int16> value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Double> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Double> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatchType
        {
            get
            {
                return _BatchType;
            }
            set
            {
                OnBatchTypeChanging(value);
                ReportPropertyChanging("BatchType");
                _BatchType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatchType");
                OnBatchTypeChanged();
            }
        }
        private global::System.String _BatchType;
        partial void OnBatchTypeChanging(global::System.String value);
        partial void OnBatchTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="TestingItemConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestingItemConfiguration : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TestingItemConfiguration 对象。
        /// </summary>
        /// <param name="testingItemID">TestingItemID 属性的初始值。</param>
        /// <param name="testingItemName">TestingItemName 属性的初始值。</param>
        /// <param name="activeStatus">ActiveStatus 属性的初始值。</param>
        public static TestingItemConfiguration CreateTestingItemConfiguration(global::System.Guid testingItemID, global::System.String testingItemName, global::System.Boolean activeStatus)
        {
            TestingItemConfiguration testingItemConfiguration = new TestingItemConfiguration();
            testingItemConfiguration.TestingItemID = testingItemID;
            testingItemConfiguration.TestingItemName = testingItemName;
            testingItemConfiguration.ActiveStatus = activeStatus;
            return testingItemConfiguration;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TestingItemID
        {
            get
            {
                return _TestingItemID;
            }
            set
            {
                if (_TestingItemID != value)
                {
                    OnTestingItemIDChanging(value);
                    ReportPropertyChanging("TestingItemID");
                    _TestingItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestingItemID");
                    OnTestingItemIDChanged();
                }
            }
        }
        private global::System.Guid _TestingItemID;
        partial void OnTestingItemIDChanging(global::System.Guid value);
        partial void OnTestingItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestingItemName
        {
            get
            {
                return _TestingItemName;
            }
            set
            {
                OnTestingItemNameChanging(value);
                ReportPropertyChanging("TestingItemName");
                _TestingItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TestingItemName");
                OnTestingItemNameChanged();
            }
        }
        private global::System.String _TestingItemName;
        partial void OnTestingItemNameChanging(global::System.String value);
        partial void OnTestingItemNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestingItemColor
        {
            get
            {
                return _TestingItemColor;
            }
            set
            {
                OnTestingItemColorChanging(value);
                ReportPropertyChanging("TestingItemColor");
                _TestingItemColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestingItemColor");
                OnTestingItemColorChanged();
            }
        }
        private global::System.String _TestingItemColor;
        partial void OnTestingItemColorChanging(global::System.String value);
        partial void OnTestingItemColorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DisplaySequence
        {
            get
            {
                return _DisplaySequence;
            }
            set
            {
                OnDisplaySequenceChanging(value);
                ReportPropertyChanging("DisplaySequence");
                _DisplaySequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplaySequence");
                OnDisplaySequenceChanged();
            }
        }
        private Nullable<global::System.Int16> _DisplaySequence;
        partial void OnDisplaySequenceChanging(Nullable<global::System.Int16> value);
        partial void OnDisplaySequenceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkListFileName
        {
            get
            {
                return _WorkListFileName;
            }
            set
            {
                OnWorkListFileNameChanging(value);
                ReportPropertyChanging("WorkListFileName");
                _WorkListFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkListFileName");
                OnWorkListFileNameChanged();
            }
        }
        private global::System.String _WorkListFileName;
        partial void OnWorkListFileNameChanging(global::System.String value);
        partial void OnWorkListFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveStatus
        {
            get
            {
                return _ActiveStatus;
            }
            set
            {
                OnActiveStatusChanging(value);
                ReportPropertyChanging("ActiveStatus");
                _ActiveStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveStatus");
                OnActiveStatusChanged();
            }
        }
        private global::System.Boolean _ActiveStatus;
        partial void OnActiveStatusChanging(global::System.Boolean value);
        partial void OnActiveStatusChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "TestItem_TubeGroup", "TubeGroup")]
        public EntityCollection<TubeGroup> TubeGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TubeGroup>("WanTaiModel.TestItem_TubeGroup", "TubeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TubeGroup>("WanTaiModel.TestItem_TubeGroup", "TubeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="Tube")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tube : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Tube 对象。
        /// </summary>
        /// <param name="tubeID">TubeID 属性的初始值。</param>
        /// <param name="tubeGroupID">TubeGroupID 属性的初始值。</param>
        /// <param name="barCode">BarCode 属性的初始值。</param>
        /// <param name="position">Position 属性的初始值。</param>
        /// <param name="grid">Grid 属性的初始值。</param>
        /// <param name="tubeType">TubeType 属性的初始值。</param>
        /// <param name="experimentID">ExperimentID 属性的初始值。</param>
        public static Tube CreateTube(global::System.Guid tubeID, global::System.Guid tubeGroupID, global::System.String barCode, global::System.Int32 position, global::System.Int32 grid, global::System.Int16 tubeType, global::System.Guid experimentID)
        {
            Tube tube = new Tube();
            tube.TubeID = tubeID;
            tube.TubeGroupID = tubeGroupID;
            tube.BarCode = barCode;
            tube.Position = position;
            tube.Grid = grid;
            tube.TubeType = tubeType;
            tube.ExperimentID = experimentID;
            return tube;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TubeID
        {
            get
            {
                return _TubeID;
            }
            set
            {
                if (_TubeID != value)
                {
                    OnTubeIDChanging(value);
                    ReportPropertyChanging("TubeID");
                    _TubeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TubeID");
                    OnTubeIDChanged();
                }
            }
        }
        private global::System.Guid _TubeID;
        partial void OnTubeIDChanging(global::System.Guid value);
        partial void OnTubeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TubeGroupID
        {
            get
            {
                return _TubeGroupID;
            }
            set
            {
                OnTubeGroupIDChanging(value);
                ReportPropertyChanging("TubeGroupID");
                _TubeGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TubeGroupID");
                OnTubeGroupIDChanged();
            }
        }
        private global::System.Guid _TubeGroupID;
        partial void OnTubeGroupIDChanging(global::System.Guid value);
        partial void OnTubeGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TubePosBarCode
        {
            get
            {
                return _TubePosBarCode;
            }
            set
            {
                OnTubePosBarCodeChanging(value);
                ReportPropertyChanging("TubePosBarCode");
                _TubePosBarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TubePosBarCode");
                OnTubePosBarCodeChanged();
            }
        }
        private global::System.String _TubePosBarCode;
        partial void OnTubePosBarCodeChanging(global::System.String value);
        partial void OnTubePosBarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Grid
        {
            get
            {
                return _Grid;
            }
            set
            {
                OnGridChanging(value);
                ReportPropertyChanging("Grid");
                _Grid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grid");
                OnGridChanged();
            }
        }
        private global::System.Int32 _Grid;
        partial void OnGridChanging(global::System.Int32 value);
        partial void OnGridChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TubeType
        {
            get
            {
                return _TubeType;
            }
            set
            {
                OnTubeTypeChanging(value);
                ReportPropertyChanging("TubeType");
                _TubeType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TubeType");
                OnTubeTypeChanged();
            }
        }
        private global::System.Int16 _TubeType;
        partial void OnTubeTypeChanging(global::System.Int16 value);
        partial void OnTubeTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private global::System.Guid _ExperimentID;
        partial void OnExperimentIDChanging(global::System.Guid value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Double> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Double> value);
        partial void OnVolumeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_Tubes_TubeGroup", "TubeGroup")]
        public TubeGroup TubeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubeGroup>("WanTaiModel.FK_Tubes_TubeGroup", "TubeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubeGroup>("WanTaiModel.FK_Tubes_TubeGroup", "TubeGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TubeGroup> TubeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubeGroup>("WanTaiModel.FK_Tubes_TubeGroup", "TubeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TubeGroup>("WanTaiModel.FK_Tubes_TubeGroup", "TubeGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "Tube_PlatePosition", "DWPlatePosition")]
        public EntityCollection<DWPlatePosition> DWPlatePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DWPlatePosition>("WanTaiModel.Tube_PlatePosition", "DWPlatePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DWPlatePosition>("WanTaiModel.Tube_PlatePosition", "DWPlatePosition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="TubeGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TubeGroup : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TubeGroup 对象。
        /// </summary>
        /// <param name="tubeGroupID">TubeGroupID 属性的初始值。</param>
        /// <param name="poolingRulesID">PoolingRulesID 属性的初始值。</param>
        /// <param name="experimentID">ExperimentID 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        public static TubeGroup CreateTubeGroup(global::System.Guid tubeGroupID, global::System.Guid poolingRulesID, global::System.Guid experimentID, global::System.DateTime createTime)
        {
            TubeGroup tubeGroup = new TubeGroup();
            tubeGroup.TubeGroupID = tubeGroupID;
            tubeGroup.PoolingRulesID = poolingRulesID;
            tubeGroup.ExperimentID = experimentID;
            tubeGroup.CreateTime = createTime;
            return tubeGroup;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TubeGroupID
        {
            get
            {
                return _TubeGroupID;
            }
            set
            {
                if (_TubeGroupID != value)
                {
                    OnTubeGroupIDChanging(value);
                    ReportPropertyChanging("TubeGroupID");
                    _TubeGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TubeGroupID");
                    OnTubeGroupIDChanged();
                }
            }
        }
        private global::System.Guid _TubeGroupID;
        partial void OnTubeGroupIDChanging(global::System.Guid value);
        partial void OnTubeGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PoolingRulesID
        {
            get
            {
                return _PoolingRulesID;
            }
            set
            {
                OnPoolingRulesIDChanging(value);
                ReportPropertyChanging("PoolingRulesID");
                _PoolingRulesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PoolingRulesID");
                OnPoolingRulesIDChanged();
            }
        }
        private global::System.Guid _PoolingRulesID;
        partial void OnPoolingRulesIDChanging(global::System.Guid value);
        partial void OnPoolingRulesIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private global::System.Guid _ExperimentID;
        partial void OnExperimentIDChanging(global::System.Guid value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TubesBatchID
        {
            get
            {
                return _TubesBatchID;
            }
            set
            {
                OnTubesBatchIDChanging(value);
                ReportPropertyChanging("TubesBatchID");
                _TubesBatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TubesBatchID");
                OnTubesBatchIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TubesBatchID;
        partial void OnTubesBatchIDChanging(Nullable<global::System.Guid> value);
        partial void OnTubesBatchIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatchType
        {
            get
            {
                return _BatchType;
            }
            set
            {
                OnBatchTypeChanging(value);
                ReportPropertyChanging("BatchType");
                _BatchType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BatchType");
                OnBatchTypeChanged();
            }
        }
        private global::System.String _BatchType;
        partial void OnBatchTypeChanging(global::System.String value);
        partial void OnBatchTypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_TubeGroup_PoolingRulesConfiguration", "PoolingRulesConfiguration")]
        public PoolingRulesConfiguration PoolingRulesConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoolingRulesConfiguration>("WanTaiModel.FK_TubeGroup_PoolingRulesConfiguration", "PoolingRulesConfiguration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoolingRulesConfiguration>("WanTaiModel.FK_TubeGroup_PoolingRulesConfiguration", "PoolingRulesConfiguration").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PoolingRulesConfiguration> PoolingRulesConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PoolingRulesConfiguration>("WanTaiModel.FK_TubeGroup_PoolingRulesConfiguration", "PoolingRulesConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PoolingRulesConfiguration>("WanTaiModel.FK_TubeGroup_PoolingRulesConfiguration", "PoolingRulesConfiguration", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_TubeGroup_TubesBatch", "TubesBatch")]
        public TubesBatch TubesBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubesBatch>("WanTaiModel.FK_TubeGroup_TubesBatch", "TubesBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubesBatch>("WanTaiModel.FK_TubeGroup_TubesBatch", "TubesBatch").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TubesBatch> TubesBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TubesBatch>("WanTaiModel.FK_TubeGroup_TubesBatch", "TubesBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TubesBatch>("WanTaiModel.FK_TubeGroup_TubesBatch", "TubesBatch", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_Tubes_TubeGroup", "Tube")]
        public EntityCollection<Tube> Tubes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tube>("WanTaiModel.FK_Tubes_TubeGroup", "Tube");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tube>("WanTaiModel.FK_Tubes_TubeGroup", "Tube", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "TestItem_TubeGroup", "TestingItemConfiguration")]
        public EntityCollection<TestingItemConfiguration> TestingItemConfigurations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestingItemConfiguration>("WanTaiModel.TestItem_TubeGroup", "TestingItemConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestingItemConfiguration>("WanTaiModel.TestItem_TubeGroup", "TestingItemConfiguration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="TubesBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TubesBatch : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TubesBatch 对象。
        /// </summary>
        /// <param name="tubesBatchID">TubesBatchID 属性的初始值。</param>
        /// <param name="tubesBatchName">TubesBatchName 属性的初始值。</param>
        /// <param name="experimentID">ExperimentID 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        public static TubesBatch CreateTubesBatch(global::System.Guid tubesBatchID, global::System.String tubesBatchName, global::System.Guid experimentID, global::System.DateTime createTime)
        {
            TubesBatch tubesBatch = new TubesBatch();
            tubesBatch.TubesBatchID = tubesBatchID;
            tubesBatch.TubesBatchName = tubesBatchName;
            tubesBatch.ExperimentID = experimentID;
            tubesBatch.CreateTime = createTime;
            return tubesBatch;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TubesBatchID
        {
            get
            {
                return _TubesBatchID;
            }
            set
            {
                if (_TubesBatchID != value)
                {
                    OnTubesBatchIDChanging(value);
                    ReportPropertyChanging("TubesBatchID");
                    _TubesBatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TubesBatchID");
                    OnTubesBatchIDChanged();
                }
            }
        }
        private global::System.Guid _TubesBatchID;
        partial void OnTubesBatchIDChanging(global::System.Guid value);
        partial void OnTubesBatchIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TubesBatchName
        {
            get
            {
                return _TubesBatchName;
            }
            set
            {
                OnTubesBatchNameChanging(value);
                ReportPropertyChanging("TubesBatchName");
                _TubesBatchName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TubesBatchName");
                OnTubesBatchNameChanged();
            }
        }
        private global::System.String _TubesBatchName;
        partial void OnTubesBatchNameChanging(global::System.String value);
        partial void OnTubesBatchNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ExperimentID
        {
            get
            {
                return _ExperimentID;
            }
            set
            {
                OnExperimentIDChanging(value);
                ReportPropertyChanging("ExperimentID");
                _ExperimentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExperimentID");
                OnExperimentIDChanged();
            }
        }
        private global::System.Guid _ExperimentID;
        partial void OnExperimentIDChanging(global::System.Guid value);
        partial void OnExperimentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_TubesBatch_ExperimentsInfo", "ExperimentsInfo")]
        public ExperimentsInfo ExperimentsInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExperimentsInfo>("WanTaiModel.FK_TubesBatch_ExperimentsInfo", "ExperimentsInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExperimentsInfo>("WanTaiModel.FK_TubesBatch_ExperimentsInfo", "ExperimentsInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExperimentsInfo> ExperimentsInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExperimentsInfo>("WanTaiModel.FK_TubesBatch_ExperimentsInfo", "ExperimentsInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExperimentsInfo>("WanTaiModel.FK_TubesBatch_ExperimentsInfo", "ExperimentsInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_RotationInfo_TubesBatch", "RotationInfo")]
        public EntityCollection<RotationInfo> RotationInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RotationInfo>("WanTaiModel.FK_RotationInfo_TubesBatch", "RotationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RotationInfo>("WanTaiModel.FK_RotationInfo_TubesBatch", "RotationInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WanTaiModel", "FK_TubeGroup_TubesBatch", "TubeGroup")]
        public EntityCollection<TubeGroup> TubeGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TubeGroup>("WanTaiModel.FK_TubeGroup_TubesBatch", "TubeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TubeGroup>("WanTaiModel.FK_TubeGroup_TubesBatch", "TubeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WanTaiModel", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserInfo 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="loginName">LoginName 属性的初始值。</param>
        /// <param name="loginPassWord">LoginPassWord 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        public static UserInfo CreateUserInfo(global::System.Guid userID, global::System.String loginName, global::System.String loginPassWord, global::System.DateTime createTime)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.UserID = userID;
            userInfo.LoginName = loginName;
            userInfo.LoginPassWord = loginPassWord;
            userInfo.CreateTime = createTime;
            return userInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginPassWord
        {
            get
            {
                return _LoginPassWord;
            }
            set
            {
                OnLoginPassWordChanging(value);
                ReportPropertyChanging("LoginPassWord");
                _LoginPassWord = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginPassWord");
                OnLoginPassWordChanged();
            }
        }
        private global::System.String _LoginPassWord;
        partial void OnLoginPassWordChanging(global::System.String value);
        partial void OnLoginPassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateName
        {
            get
            {
                return _CreateName;
            }
            set
            {
                OnCreateNameChanging(value);
                ReportPropertyChanging("CreateName");
                _CreateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateName");
                OnCreateNameChanged();
            }
        }
        private global::System.String _CreateName;
        partial void OnCreateNameChanging(global::System.String value);
        partial void OnCreateNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateTime;
        partial void OnUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateTimeChanged();

        #endregion

    
    }

    #endregion

    
}
